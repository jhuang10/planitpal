buildscript {
    repositories {
        mavenCentral()
    }
}


plugins {
    id "com.bmuschko.cargo" version "2.1.1"
}

evaluationDependsOn(':planitpal-service')

apply plugin: 'java'
apply plugin: 'idea'

allprojects {
    project.ext {
        sourceCo6patibility = JavaVersion.VERSION_1_6
        targetCompatibility = JavaVersion.VERSION_1_6
    }

    repositories {
        mavenCentral()
    }

    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'eclipse-wtp'


}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    defaultTasks "test"

    repositories {
        maven {
            url "http://artifactory.gapinc.dev/artifactory/remote-repos"
        }
        maven {
            url "http://artifactory.gapinc.dev/artifactory/local-non-prod"
        }
        maven {
            url "http://artifactory.gapinc.dev/artifactory/gemjars"
        }
    }
    group = "$group"
}

cargo {

    port = apiTestPort.toInteger()

    remote.hostname = apiTestBaseUri

    containerId = 'tomcat7x'
    deployable {
        file = project(':planitpal-service').war.archivePath
        context = '/'
    }
    local {
        installer {
            installUrl = tomcatTarballUrl
            downloadDir = file("${rootProject.buildDir}/download")
            extractDir = file("${rootProject.buildDir}/extract")
        }
        homeDir = mkdir("/tmp/cargo/planitpal")
        configHomeDir = mkdir("/tmp/cargo/planitpal")
    }
}

cargoRunLocal.dependsOn project(':planitpal-service').assemble
cargoStartLocal.dependsOn project(':planitpal-service').assemble

task cargoDebugLocal {
    doFirst {
        cargo.local.jvmArgs = "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000"
    }
    finalizedBy ':cargoStartLocal'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}