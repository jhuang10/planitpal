apply plugin: 'war'

dependencies {
    compile "javax.servlet:javax.servlet-api:$javaxServletVersion"

    compile "org.springframework:spring-webmvc:$springFrameworkVersion"
    compile "org.springframework.data:spring-data-mongodb:$springDataMongoDbVersion"
    compile "org.mongodb:mongo-java-driver:$mongoJavaDriverVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.projectlombok:lombok:$lombokVersion"

    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jacksonVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"

    compile "org.springframework.security:spring-security-web:$springSecurityWeb"
    compile "org.springframework.security:spring-security-config:$springSecurityConfig"

    testCompile "org.springframework:spring-test:$springFrameworkVersion"
    testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testCompile("org.mockito:mockito-all:$mockitoVersion") {
        exclude group: 'org.hamcrest'
    }
    testCompile("junit:junit:$junitVersion") {
        exclude group: 'org.hamcrest'
    }
}


test {
    testLogging {
        events "passed", "failed", "skipped"
        info {
            events "passed", "failed", "skipped"
        }
    }
}

war {
    doFirst {
        def versionFile = file("${sourceSets.main.output.resourcesDir}/configuration/version.properties")
        versionFile.write("application.version=${version}\n")
    }
}
